apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'

def apkVersionCode = 0
def apkVersionName = "0.0"

task copyAssets(type: Copy) {
    from '../backend/out'
    into 'src/main/assets/bin'
    include '**/webkeynative_*'
    include '**/version_code.txt'
    exclude '**/*_symbol*'
}
preBuild.dependsOn copyAssets


task readVersions {
    def versionPropsFile = file('version.properties')

    if (versionPropsFile.canRead()) {
        Properties versionProps = new Properties()
        versionProps.load(new FileInputStream(versionPropsFile))
        apkVersionCode = versionProps['VERSION_CODE'].toInteger()
        apkVersionName = versionProps['VERSION_NAME'].toString()
    } else {
        throw new GradleException("Could not read version.properties!")
    }
}

android {
    compileSdkVersion 26
    buildToolsVersion '26.0.2'
    useLibrary 'org.apache.http.legacy'

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    android.applicationVariants.all { variant ->
        variant.outputs.all {
            def flavour = variant.productFlavors[0].name
            def type = variant.buildType.name
            def vcode = variant.versionCode
            outputFileName = "wk-${flavour}-${type}-${vcode}.apk"
        }
    }

    defaultConfig {
        applicationId 'com.openmdmremote'
        minSdkVersion 17
        targetSdkVersion 26
        versionName apkVersionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }

    lintOptions {
        abortOnError false
    }

    signingConfigs {
        release
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            debuggable false
            buildConfigField "boolean", "DEBUG_FEATURE", "false"
            signingConfig signingConfigs.release
            zipAlignEnabled true
            buildConfigField "String", "TRACKINGID", "\"UA-67536410-1\""
            build.dependsOn copyAssets
        }

        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            debuggable true
            buildConfigField "boolean", "DEBUG_FEATURE", "true"
            buildConfigField "String", "TRACKINGID", "\"UA-67536410-3\""
            build.dependsOn copyAssets
        }
    }

    flavorDimensions "foo"

    productFlavors {
        production {
            dimension "foo"
            buildConfigField "String", "HARBOR_ADDRESS", "null"
            buildConfigField "boolean", "HARBOR_IS_SECURE", "true"
            buildConfigField "boolean", "LOCAL_HTTPD_IS_SECURE", "true"
            buildConfigField "String", "FLEED_ID", "null"
        }
        systemsign {
            dimension "foo"
            buildConfigField "String", "HARBOR_ADDRESS", "null"
            buildConfigField "boolean", "HARBOR_IS_SECURE", "true"
            buildConfigField "boolean", "LOCAL_HTTPD_IS_SECURE", "true"
            buildConfigField "String", "FLEED_ID", "null"
        }
    }
}

task setSigningKey {
    Properties props = new Properties()
    def propFile = file('../keys/gradle.signing.properties')

    if (propFile.canRead()) {
        props.load(new FileInputStream(propFile))
        android.signingConfigs.release.storeFile = file(props['STORE_FILE'])
        android.signingConfigs.release.storePassword = props['STORE_PASSWORD']
        android.signingConfigs.release.keyAlias = props['KEY_ALIAS']
        android.signingConfigs.release.keyPassword = props['KEY_PASSWORD']
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:multidex:1.0.2'
    implementation 'com.android.support:preference-v14:26.1.0'
    implementation 'com.android.support:design:26.1.0'
    implementation 'org.nanohttpd:nanohttpd:2.3.1'
    implementation 'org.nanohttpd:nanohttpd-webserver:2.3.1'
    implementation 'org.nanohttpd:nanohttpd-websocket:2.3.1'
    implementation 'org.bouncycastle:bcprov-jdk16:1.45'
    implementation 'com.google.code.gson:gson:2.7'
    implementation 'com.google.guava:guava:23.0-android'
    implementation 'com.google.protobuf:protobuf-java:2.6.1'
    implementation 'com.google.android.gms:play-services-analytics:11.4.0'
    //WIPC
    implementation 'io.netty:netty-all:4.1.15.Final'
    //harbor registration
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'com.squareup.okhttp3:okhttp:3.7.0'
    compile 'com.squareup.okhttp3:okhttp-urlconnection:3.2.0'
    compile 'com.github.franmontiel:PersistentCookieJar:v1.0.0'
    androidTestCompile 'com.android.support.test:testing-support-lib:0.1'
    compile 'com.github.NaikSoftware:StompProtocolAndroid:1.1.8'
    compile 'org.java-websocket:Java-WebSocket:1.3.0'
}

configurations.all {
    resolutionStrategy.force 'com.google.code.findbugs:jsr305:1.3.9'
}

repositories {
    maven {
        url "https://github.com/jsumners/mvn-repo/raw/master/releases/"
    }
    google()
}

